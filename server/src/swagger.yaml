openapi: 3.0.3
info:
  title: MyContacts API
  version: 1.0.0
  description: API with JWT authentication and Contacts CRUD
servers:
  - url: http://localhost:4000
paths:
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                name:
                  type: string
      responses:
        '201':
          description: Registered
        '400':
          description: Validation error
        '409':
          description: Email already registered
  /api/auth/login:
    post:
      tags: [Auth]
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Token returned
  /api/contacts:
    get:
      tags: [Contacts]
      summary: List user's contacts
      security: [{ bearerAuth: [] }]
      responses:
        '200':
          description: List of contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
        '401': { description: Unauthorized }
    post:
      tags: [Contacts]
      summary: Create a contact
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '201': { description: Created }
        '400': { description: Validation error }
        '401': { description: Unauthorized }
  /api/contacts/{id}:
    patch:
      tags: [Contacts]
      summary: Update a contact (partial)
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactUpdate'
      responses:
        '200': { description: Updated }
        '400': { description: Validation error }
        '401': { description: Unauthorized }
        '404': { description: Not found }
    delete:
      tags: [Contacts]
      summary: Delete a contact
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: Deleted }
        '401': { description: Unauthorized }
        '404': { description: Not found }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Contact:
      type: object
      properties:
        _id: { type: string }
        user: { type: string }
        firstName: { type: string }
        lastName: { type: string }
        phone: { type: string }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
    ContactInput:
      type: object
      required: [firstName, lastName, phone]
      properties:
        firstName: { type: string }
        lastName: { type: string }
        phone:
          type: string
          minLength: 10
          maxLength: 20
    ContactUpdate:
      type: object
      properties:
        firstName: { type: string }
        lastName: { type: string }
        phone:
          type: string
          minLength: 10
          maxLength: 20